<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.BackgroundImageLayout" type="System.Windows.Forms.ImageLayout, System.Windows.Forms">
    <value>None</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdafQALWXoAEV5+ABVqjAAfc5QAKGyIAC9xiwAjep0ANXWQADJ4
        lgAbg7QALoWlAC6HqQAthqwANIOjADSKrwA6jrEAM4+5ADyStgA4k70AP5m5AFKIngBViZ8ARZOxAEuV
        swBEl7gAQJm/AEiavQBLnLwAXJqzAFGfvQBllKcAYZOoAGOWqwB6o7QALZPCADeUwAA2mMMAMpjFAD2c
        xQA1mMgAPp7PAD+izwA6odEAOKPUAD+j1gBOp8cARKLKAE+pyQBRocMAVabEAF2mxABRpckAV6rIAFWo
        zgBVrc0AWq/NAFqwzQBDo9EARqXWAEWr3QBCrdwAWrPRAFqz1wBUsd4AXbTYAG+qwgBrrMUAYqzIAGev
        ywBxrcYAabPOAHmzyQBisdAAZ7XVAGu20gBttdAAYrzaAG683AByudIAeL7XAEqz4wBOs+IAT7XmAFGz
        4gBVs+IAUbTkAFO45wBcuuIAXLziAFq+5wBRvOkAU7zsAFm76QBaveoAXb7oAGK+6QBrwt4AesLdAFrA
        7gBfwvAAZ8HgAGfA5QBrweQAa8TnAGPE6wBkw+wAYMTuAGzF6QByweAAdcXlAHHJ5QB0yuYAc8voAHbO
        6QB70OsAedHuAHjU9QB81vQAg6q6AIa7zwCKus0AgcfeAIPI4ACJyuMAis3jAI7M4wCLy+QAi87lAJLP
        5QCN0egAlNDmAJfV6gCY1usAmdrvAIba8wCB2vYAhNr2AIXc9gCL3vUAhdv4AIXd+gCJ3vkAnNzwAIrh
        /ACN4vwAjuT+AJHl/gCX6P4AouL2AKjm+gCr6fwArOr9AP+dUQD/r3EA/8GRAP/SsQD/5dEA////AAAA
        AAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+MQD/XFEA/3pxAP+XkQD/trEA/9TRAP//
        /wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8RWgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R
        3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAApAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x
        5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQAzwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR
        /wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMAsAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx
        /wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsAkAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR
        /wCMcf8AppH/AL+x/wDa0f8A////AAAAAAAAAB4PBQohAAAAAAAAAAAAM3SUlJWIPwQXAAAAAABDcZSK
        bWdojZWMDAcAAAB6cpFqK30cgF5hj48IFwAAOJJbKBGCGYQSLVeOcwEAeot2UkqWmYeWmE0sa5QNIEaU
        bF1fbpkTMGOZGzyTPwY5lFdYZW+ZGB1+lyUuiXACOpRVV1ZPmVGDmR8tPXdwA0iUQTw8S5kOJpB7PlSO
        Tgl5lG0qN4GZUHyZTFxgkxUjAGKSKRQyhkWFNWBkiosEAABJi3ckC38Qgjtfd5QVeAAAADSKkVpCJ0BZ
        jZMxIgAAAAAAR2aRk5KSk3UaAAAAAAAAAAAASUUvNkQAAAAAAAD8HwAA8AcAAMADAACAAQAAgAEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAACAAQAAwAMAAOAPAAD4PwAAKAAAABAAAAAgAAAAAQAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOjqgVI3OUcyp7nMMofJ7wHHGT+xpp
        iuQUX36rI2eDSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF2ZsQIwgaF5TKLB8nvQ6/+Q5P3/kub//5Pm
        /v+G2vP/WrHO/xVrjf8OWXi2N3WOFQAAAAAAAAAAAAAAAGSctAMmf6OpdMrm/5Pm//+E2vf/a8Tn/2fA
        5f9rweT/htr3/5fo/v+L3vX/LoWl/wdVddUlaYQTAAAAAAAAAAAie5+Fc8vo/4vi/P9jxOv/P6LP/4nK
        4/9Imr3/i8vk/1m76f9ivun/iN36/4vf+f8jep3/ClV1sAAAAAA/iagjUqzN+o3j/P9avuf/PZzF/zqO
        sf+Tz+T/S5Wz/5TQ5v8zj7n/OqLT/1G05P+G3vv/ds7p/wdaff4dY4A+JoGmiYTb9v941PX/SrPj/2Kx
        0P+i4vb/rOr9/5na7/+i4/f/qef7/2210P86odD/ZMPs/5Dm//8uh6n/ClV0oEOdv86Q5f//YMTu/1O8
        7P9Zvuv/csHg/6zq/f88krb/RKLK/3rC3f+s6v3/QJm//0Sm1/+M4/z/WrPR/whWdt1Qqsrwkeb//06z
        4v9TuOf/X8Lw/3XF5f+s6v3/RZOx/0ucvP+KzeP/qOb6/zeUwP8/o9b/gNn2/3DI5P8GVnf5U63L85Ln
        //9Qs+L/UrPj/1Wz4v9uvNz/rOr9/3i+1/+N0ej/q+n8/1Gfvf84o9T/Ravd/3zV9f9yyub/B1d59E6m
        xdeT5///VLHe/0el1v9HpdX/Z7XV/6zq/f8thqz/NpjD/5zc8P+Bx97/Qq3c/0+15v+F3fr/Yrza/whX
        eNA2jrCZkOT8/2zF6f8+ns//VajO/4vO5f+s6v3/crnS/4PI4P+r6fz/a7bS/1G86f9evun/j+X+/z+Z
        uv8KVnWKNYWlNmvC3v6N4vz/NZjI/ziTvf9RocP/mNbr/2OsyP+X1er/UaXJ/1y/6P9awO7/g9v3/4Xc
        9v8RZ4r5J2qFIwAAAAAwi6+mhdz3/37X9P8tk8L/G4O0/47M4/80iq//ks/m/0Oj0f9bver/fNb0/5Hn
        /v8/mbn/C1h4gQAAAAAAAAAALHydDzeSts6E2/f/ieD8/1y84v9dtNj/MpjF/1qz1/9cuuL/hdv4/47j
        /f9Pqcn/C1x9o0iBmAIAAAAAAAAAAAAAAAA2gqERL4esrWfB4P+L4v3/jeT+/43j/f+N4/3/jeP+/3nR
        7v82kLPtIGyLblCGnAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwgKFDMomso0uhwt5Mpsf7S6TE7TuR
        s8AmeJtwK3aVEAAAAAAAAAAAAAAAAAAAAADwD6xBwAOsQYABrEGAAaxBAACsQQAArEEAAKxBAACsQQAA
        rEEAAKxBAACsQQAArEGAAaxBgAGsQcADrEHwD6xB
</value>
  </data>
</root>